version: '3'

services:
  postgres:
      image: postgres:14.1
      container_name: keycloak-db
      volumes:
        - postgres_data:/var/lib/postgresql/data
      environment:
        POSTGRES_DB: keycloak
        POSTGRES_USER: keycloak
        POSTGRES_PASSWORD: password
      ports:
        - 5432:5432

  kc1:
      image: jboss/keycloak:16.1.1
      container_name: keycloak-1
      environment:
        DB_VENDOR: postgres
        DB_ADDR: postgres
        KEYCLOAK_FRONTEND_URL: "http://localhost:8000/auth/"
        KEYCLOAK_USER: admin
        KEYCLOAK_PASSWORD: admin
        PROXY_ADDRESS_FORWARDING: "true"
        CACHE_OWNERS_COUNT: 2
        CACHE_OWNERS_AUTH_SESSIONS_COUNT: 2
        JGROUPS_DISCOVERY_PROTOCOL: JDBC_PING
        JGROUPS_DISCOVERY_PROPERTIES: "datasource_jndi_name=java:jboss/datasources/KeycloakDS,initialize_sql=\"CREATE TABLE IF NOT EXISTS JGROUPSPING (own_addr varchar(200) NOT NULL, cluster_name varchar(200) NOT NULL, created TIMESTAMP DEFAULT CURRENT_TIMESTAMP, ping_data BYTEA, constraint PK_JGROUPSPING PRIMARY KEY (own_addr, cluster_name))\",remove_all_data_on_view_change=true"
      depends_on:
        - postgres

  kc2:
      image: jboss/keycloak:16.1.1
      container_name: keycloak-2
      environment:
        DB_VENDOR: postgres
        DB_ADDR: postgres
        KEYCLOAK_FRONTEND_URL: "http://localhost:8000/auth/"
        KEYCLOAK_USER: admin
        KEYCLOAK_PASSWORD: admin
        PROXY_ADDRESS_FORWARDING: "true"
        CACHE_OWNERS_COUNT: 2
        CACHE_OWNERS_AUTH_SESSIONS_COUNT: 2
        JGROUPS_DISCOVERY_PROTOCOL: JDBC_PING
        JGROUPS_DISCOVERY_PROPERTIES: "datasource_jndi_name=java:jboss/datasources/KeycloakDS,initialize_sql=\"CREATE TABLE IF NOT EXISTS JGROUPSPING (own_addr varchar(200) NOT NULL, cluster_name varchar(200) NOT NULL, created TIMESTAMP DEFAULT CURRENT_TIMESTAMP, ping_data BYTEA, constraint PK_JGROUPSPING PRIMARY KEY (own_addr, cluster_name))\",remove_all_data_on_view_change=true"
      depends_on:
        - postgres

  
  loadbalancer:
      container_name: keycloak-loadbalancer
      image: nginx:1.21.5
      volumes:
        - ./nginx_config/nginx.conf:/etc/nginx/conf.d/default.conf
      ports:
        - "8000:8000"
      depends_on:
        - kc1
        - kc2
     
volumes:
  postgres_data:
      driver: local
